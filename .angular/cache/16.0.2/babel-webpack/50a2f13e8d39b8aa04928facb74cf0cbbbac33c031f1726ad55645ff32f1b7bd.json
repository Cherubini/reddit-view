{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"./services/reddit-services/reddit-service.service\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/toolbar\";\nimport * as i6 from \"./components/home-page/home-page.component\";\nclass AppComponent {\n  constructor(dialog, dataMangerServ) {\n    this.dialog = dialog;\n    this.dataMangerServ = dataMangerServ;\n    this.title = 'reddit-view';\n    this.isLight = true;\n  }\n  changeTheme() {\n    document.body.classList.toggle('dark-mode');\n    this.isLight = !this.isLight;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.RedditService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[\"color\", \"primary\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"span\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"span\", 1);\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_4_listener() {\n        return ctx.changeTheme();\n      });\n      i0.ɵɵelementStart(5, \"mat-icon\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(7, \"app-home-page\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.isLight ? \"dark_mode\" : \"light_mode\");\n    }\n  },\n  dependencies: [i3.MatIconButton, i4.MatIcon, i5.MatToolbar, i6.HomePageComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["AppComponent","constructor","dialog","dataMangerServ","title","isLight","changeTheme","document","body","classList","toggle","i0","ɵɵdirectiveInject","i1","MatDialog","i2","RedditService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","AppComponent_Template_button_click_4_listener","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\Valentina Cherubini\\Desktop\\AIXA CORSO\\reddit-view\\src\\app\\app.component.ts","C:\\Users\\Valentina Cherubini\\Desktop\\AIXA CORSO\\reddit-view\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RedditService } from './services/reddit-services/reddit-service.service';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'reddit-view';\n  isLight =true;\n\n  constructor(public dialog: MatDialog, public dataMangerServ: RedditService){ }\n\n  changeTheme(){\n    document.body.classList.toggle('dark-mode');\n    this.isLight=!this.isLight;\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>{{title}}</span>\n  <span class=\"spacer\"></span>\n  <button mat-icon-button (click)=\"changeTheme()\">\n    <mat-icon>{{isLight ? \"dark_mode\" : \"light_mode\"}}</mat-icon>\n  </button>\n</mat-toolbar>\n\n\n<app-home-page></app-home-page>\n"],"mappings":";;;;;;;AAIA,MAKaA,YAAY;EAIvBC,YAAmBC,MAAiB,EAASC,cAA6B;IAAvD,KAAAD,MAAM,GAANA,MAAM;IAAoB,KAAAC,cAAc,GAAdA,cAAc;IAH3D,KAAAC,KAAK,GAAG,aAAa;IACrB,KAAAC,OAAO,GAAE,IAAI;EAEgE;EAE7EC,WAAWA,CAAA;IACTC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;IAC3C,IAAI,CAACL,OAAO,GAAC,CAAC,IAAI,CAACA,OAAO;EAC5B;;AATWL,YAAY,C;mBAAZA,YAAY,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,SAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;AAAZhB,YAAY,C;QAAZA,YAAY;EAAAiB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTzBZ,EAAA,CAAAc,cAAA,qBAA6B;MACrBd,EAAA,CAAAe,MAAA,GAAS;MAAAf,EAAA,CAAAgB,YAAA,EAAO;MACtBhB,EAAA,CAAAiB,SAAA,cAA4B;MAC5BjB,EAAA,CAAAc,cAAA,gBAAgD;MAAxBd,EAAA,CAAAkB,UAAA,mBAAAC,8CAAA;QAAA,OAASN,GAAA,CAAAlB,WAAA,EAAa;MAAA,EAAC;MAC7CK,EAAA,CAAAc,cAAA,eAAU;MAAAd,EAAA,CAAAe,MAAA,GAAwC;MAAAf,EAAA,CAAAgB,YAAA,EAAW;MAKjEhB,EAAA,CAAAiB,SAAA,oBAA+B;;;MARvBjB,EAAA,CAAAoB,SAAA,GAAS;MAATpB,EAAA,CAAAqB,iBAAA,CAAAR,GAAA,CAAApB,KAAA,CAAS;MAGHO,EAAA,CAAAoB,SAAA,GAAwC;MAAxCpB,EAAA,CAAAqB,iBAAA,CAAAR,GAAA,CAAAnB,OAAA,8BAAwC;;;;;;SDKzCL,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}