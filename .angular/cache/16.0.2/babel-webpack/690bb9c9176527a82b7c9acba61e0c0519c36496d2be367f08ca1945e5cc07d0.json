{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass RedditService {\n  constructor(http) {\n    this.http = http;\n  }\n  getRedditPosts(argument) {\n    return this.http.get('https://www.reddit.com/r/' + argument + '/hot.json?limit=100');\n  }\n}\nRedditService.ɵfac = function RedditService_Factory(t) {\n  return new (t || RedditService)(i0.ɵɵinject(i1.HttpClient));\n};\nRedditService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RedditService,\n  factory: RedditService.ɵfac,\n  providedIn: 'root'\n});\nexport { RedditService };","map":{"version":3,"names":["RedditService","constructor","http","getRedditPosts","argument","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Valentina Cherubini\\Desktop\\AIXA CORSO\\reddit-view\\src\\app\\services\\reddit-services\\reddit-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RedditService {\n\n  constructor(private http: HttpClient) { }\n\n  getRedditPosts(argument:string){\n    return this.http.get<any>('https://www.reddit.com/r/'+argument+'/hot.json?limit=100');\n  }\n\n}\n"],"mappings":";;AAGA,MAGaA,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,cAAcA,CAACC,QAAe;IAC5B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,2BAA2B,GAACD,QAAQ,GAAC,qBAAqB,CAAC;EACvF;;AANWJ,aAAa,C;mBAAbA,aAAa,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbT,aAAa,C;SAAbA,aAAa;EAAAU,OAAA,EAAbV,aAAa,CAAAW,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPZ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}